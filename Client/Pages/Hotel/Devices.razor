@page "/hotel-devices"
@attribute [Authorize(Roles = "Front Desk")]
@using NCMS_wasm.Shared
<PageTitle>Devices | NCMS</PageTitle>
<MudStack>
    <MudText Typo="Typo.h5">Device Settings</MudText>
    <MudDataGrid Items="@deviceList" T="Device" Loading="@isLoading" HeaderClass="mud-theme-default text-nowrap" ShowMenuIcon Dense HorizontalScrollbar="true"
                 ColumnResizeMode="ResizeMode.Column">
        <ToolBarContent>
            <MudButton Variant="Variant.Filled" Color="Color.Success" Class="my-2 mx-1" StartIcon="@Icons.Material.Filled.Refresh" OnClick="LoadDeviceList">Refresh</MudButton>
            @* <MudButton Variant="Variant.Filled" Color="Color.Info" Class="my-2 mx-1" StartIcon="@Icons.Material.Filled.FamilyRestroom" OnClick="OpenAddGuestDialog">Add Guest</MudButton> *@
            <MudSpacer />
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.DeviceName" Title="Device Name" Filterable="true" />
            <PropertyColumn Property="x => x.LocalIP" Title="Local IP" Filterable="true" />
            <PropertyColumn Property="x => x.MacAddress" Title="Mac Address" Filterable="true" />            
            <TemplateColumn Title="Last Server Handshake">
                <CellTemplate>
                    <MudStack Spacing="0">
                        <MudText Typo="Typo.subtitle2">@context.Item.UpdatedOn</MudText>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <NoRecordsContent>
            <MudText>No Records to show</MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudText>Loading Content...</MudText>
        </LoadingContent>
        <PagerContent>
            <MudDataGridPager T="Device" />
        </PagerContent>
    </MudDataGrid>
    @* <MudStack AlignItems="AlignItems.Stretch">
        <MudTabs Outlined="true" Position="Position.Start" Rounded="true" Border="true"
                 ApplyEffectsToContainer="true" Class="mt-8" PanelClass="pa-6 w-100">
            <MudTabPanel Text="USB RFID Reader" Icon="fab fa-usb">
                <MudItem xs="12" Class="w-100">
                    <MudStack>
                        <MudSelect T="string" Label="USB Devices" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem Value="@("Cappuccino")" />
                            <MudSelectItem Value="@("Cafe Latte")" />
                            <MudSelectItem Value="@("Espresso")" />
                        </MudSelect>
                    </MudStack>
                </MudItem>
            </MudTabPanel>
            <MudTabPanel Text="Network RFID" Icon="fas fa-network-wired">
                <MudItem xs="12" Class="w-100">
                    <MudSelect T="string" Label="Devices" AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem Value="@("Cappuccino")" />
                        <MudSelectItem Value="@("Cafe Latte")" />
                        <MudSelectItem Value="@("Espresso")" />
                    </MudSelect>
                </MudItem>
            </MudTabPanel>
        </MudTabs>
    </MudStack> *@
</MudStack>

@code {
    private List<Device> deviceList = new List<Device>();
    private bool isLoading = false;
    [Inject] HttpClient? httpClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadDeviceList();
        await base.OnInitializedAsync();
    }


    private async Task LoadDeviceList()
    {
        isLoading = true;
        try
        {
            deviceList = await httpClient.GetFromJsonAsync<List<Device>>($"Devices/GetNetworkDevices");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception Occured: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

}
