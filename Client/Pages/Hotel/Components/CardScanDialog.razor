@using NCMS_wasm.Shared

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DocumentScanner"></MudIcon>
            Scan Card
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudStack Class="w-100" Spacing="2">
            <MudText Typo="Typo.body1">Room Number: <strong>@roomNumber</strong></MudText>
            <MudTextField @bind-Value="cardValue" Label="Card ID" Variant="Variant.Outlined" ReadOnly ShrinkLabel Margin="Margin.Normal" />
            
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudLoadingButton Variant="Variant.Filled"
                          Color="Color.Success"
                          Size="Size.Large"
                          OnClick="OnSubmit"
                          Loading="@(_loading)"
                          ButtonType="ButtonType.Button">
            <LoadingContent>Submitting...</LoadingContent>
            <ChildContent>Submit</ChildContent>
        </MudLoadingButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Parameter] public int roomNumber { get; set; }
    [Inject] IJSRuntime JSRuntime { get; set; }
    private string? cardValue { get; set; }
    private bool _loading = false;
    [JSInvokable]
    public void ReceiveRfidData(string data)
    {
        cardValue = null;
        cardValue = data;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await JSRuntime.InvokeVoidAsync("startKeyboardListener", DotNetObjectReference.Create(this));
        await base.OnInitializedAsync();
    }
    

    void Cancel() => MudDialog.Cancel();
    void OnSubmit() => MudDialog.Close(DialogResult.Ok(cardValue));

}
