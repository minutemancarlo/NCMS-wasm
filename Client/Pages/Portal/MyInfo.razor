@page "/portal"
@using NCMS_wasm.Shared
@layout MainLayout
@attribute [Authorize(Roles = "Gas Employee,Front Desk,Human Resource")]
<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                <MudText Typo="Typo.h6">Leave Credits</MudText>
                <MudText Typo="Typo.body1"><strong>Vacation Leave: </strong>0</MudText>
                <MudText Typo="Typo.body1"><strong>Sick Leave: </strong>0</MudText>
                <MudText Typo="Typo.body1"><strong>Emergency Leave: </strong>0</MudText>                
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudGrid>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
                </MudItem>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%">
                <MudText Typo="Typo.h6">My Info</MudText>
                <MudText Typo="Typo.body1"><strong>Employee ID: </strong>@employee.IDNumber</MudText>
                <MudText Typo="Typo.body1"><strong>Full Name: </strong></MudText>
                <MudText Typo="Typo.body1"><strong>Position: </strong>Gas Attendant</MudText>
                <MudText Typo="Typo.body1"><strong>Department: </strong>Gasoline Station</MudText>
                <MudText Typo="Typo.body1"><strong>Branch: </strong>Branch 1</MudText>
                <MudText Typo="Typo.body1"><strong>Employment Status: </strong>Regular</MudText>
                <MudText Typo="Typo.body1"><strong>Employment Date: </strong>01/01/2021</MudText>
                <MudText Typo="Typo.body1"><strong>Birthdate: </strong>01/01/1990</MudText>                
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code{
    [CascadingParameter]
    public MainLayout MainLayout { get; private set; }
    [Inject] HttpClient? httpClient { get; set; }
    [Inject] ISnackbar Snackbar { get; set; }
    private Employee? employee = new();

    private string? currentUserId;
    protected override async Task OnInitializedAsync()
    {
        currentUserId = MainLayout.CurrentUserId;
        MainLayout.SubTitle = "Employee Portal Module";
        employee = await GetEmployeeInfoAsync(currentUserId);
        await base.OnInitializedAsync();
    }

    public async Task<Employee> GetEmployeeInfoAsync(string id)
    {
        try
        {
            // Send a POST request with the ID in the request body
            var response = await httpClient.PostAsJsonAsync("Employee/GetEmployeeInfo", id);

            // Ensure the request was successful
            if (response.IsSuccessStatusCode)
            {
                // Deserialize the response to an Employee object
                var employee = await response.Content.ReadFromJsonAsync<Employee>();
                return employee;
            }
            else
            {
                
                var errorMessage = await response.Content.ReadAsStringAsync();
                throw new HttpRequestException($"Error fetching employee info: {response.StatusCode} - {errorMessage}");
            }
        }
        catch (Exception ex)
        {            
            Console.WriteLine($"Exception occurred: {ex.Message}");
            throw;
        }
    }


}